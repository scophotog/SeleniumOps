#!/bin/bash
# selenium-grid - this script starts and stops the selenium grid
#
# chkconfig:   - 2345 85 15
# description: Selenium Grid is a distributed testing platform for browser-based automation.
# processname: selenium_grid
# pidfile:     /var/run/selenium/selenium_grid.pid

# Source function library.
. /etc/init.d/functions
. ./seleniumops.conf

ERROR_LOG=$LOG_DIR/selenium_grid_error.log
STD_LOG=$LOG_DIR/selenium_grid_std.log
PID_FILE=/var/run/selenium_grid.pid
JAVA=`which java`

start() {
  if [ -f $PID_FILE ];
  then
    PID=`cat $PID_FILE`
    if  ps --pid $PID >/dev/null;
    then
      echo "Selenium Grid is already running: $PID"
      exit 0
    else
      echo "Removing stale pid file: $PID_FILE"
      rm -f $PID_FILE
    fi
  fi

  echo -n "Starting Selenium Grid Server..."
  if [ "$LOGGING" = "true" ]; then
    daemon --user $USER "$JAVA -jar $SELENIUM -role hub -hubConfig $HUB_CFG >$STD_LOG 2>$ERROR_LOG &"
  else
    daemon --user $USER "$JAVA -jar $SELENIUM -role hub -hubConfig $HUB_CFG 2>&1 /dev/null &"
  fi
  if [ $? == "0" ]; then
    ps -u $USER -o pid,user,command | grep -i -- '-role[[:space:]]hub' | awk {'print $1 '} > $PID_FILE
  fi
  echo
}

stop() {
  if [ -f $PID_FILE ];
  then
    echo -n "Stopping Selenium Grid..."
    killproc -p $PID_FILE -d 10 "$JAVA"
  else
    echo -n "Selenium Grid is not running."
    failure
  fi
  echo
}

status() {
  if [ -f $PID_FILE ];
  then
    PID=`cat $PID_FILE`
    if  ps --pid $PID >/dev/null ;
    then
      echo "Selenium Grid is running...$PID"
    else
      echo "Selenium Grid isn't running..."
    fi
  else
    echo "Selenium Grid isn't running..."
  fi
}

case "$1" in
  start)
    $1
    ;;
  stop)
    $1
    ;;
  restart)
    stop
    start
    ;;
  status)
    $1
    ;;
  *)
    echo "Usage: $SELF start|stop|restart|status"
    exit 1
    ;;
esac

